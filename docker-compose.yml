version: "3.3"

services:

  traefik:
    image: "traefik:v2.2"
    container_name: "traefik"
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      # Let's Encrypt - wildcard - Namecheap
      - "--entrypoints.websecure.http.tls.domains[0].main=${TBOX_DOMAIN}"
      - "--entrypoints.websecure.http.tls.domains[0].sans=*.${TBOX_DOMAIN}"
      - "--entrypoints.websecure.http.tls.certresolver=myresolver"
      - "--certificatesresolvers.myresolver.acme.dnschallenge=true"
      - "--certificatesresolvers.myresolver.acme.dnschallenge.disablepropagationcheck=true"
      - "--certificatesresolvers.myresolver.acme.dnschallenge.provider=namecheap"
      - "--certificatesresolvers.myresolver.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    labels:
      # Dashboard
      - "traefik.http.routers.dashboard.rule=Host(`traefik.${TBOX_DOMAIN}`)"
      - "traefik.http.routers.dashboard.service=dashboard@internal"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=myresolver"
      # API
      - "traefik.http.routers.api.rule=Host(`traefik.${TBOX_DOMAIN}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
      # Global HTTP to HTTPS Redirection
      - "traefik.http.routers.redirect-http.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.redirect-http.entrypoints=web"
      - "traefik.http.routers.redirect-http.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    environment:
      - "NAMECHEAP_API_USER=${NAMECHEAP_API_USER}"
      - "NAMECHEAP_API_KEY=${NAMECHEAP_API_KEY}"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - ${TBOX_CONFIG}/tools/traefik:/letsencrypt

  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    labels:
      # Enable automatic update with Watchtower
      - "com.centurylinklabs.watchtower.enable=true"
      # Traefik
      - "traefik.enable=true"
      - "traefik.http.routers.sabnzbd.rule=Host(`nzb.${TBOX_DOMAIN}`)"
      - "traefik.http.routers.sabnzbd.middlewares=redirect-to-https@docker"
      - "traefik.http.routers.sabnzbd.entrypoints=websecure"
      - "traefik.http.routers.sabnzbd.service=sabnzbd"
      - "traefik.http.services.sabnzbd.loadbalancer.server.port=8112"
    environment:
      - PUID=${USER_PUID}
      - PGID=${USER_PGID}
      - TZ=${TIMEZONE}
      - UMASK=002
      # themes
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:sabnzbd
      - TP_THEME=${TP_THEME}
    volumes:
      - ${TBOX_CONFIG}/tools/sabnzbd:/config
      - ${TBOX_STORAGE}/data/usenet:/data/usenet
    ports:
      -  8080:8080
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    labels:
      # Enable automatic update with Watchtower
      - "com.centurylinklabs.watchtower.enable=true"
      # Traefik
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.tls=true"
      - "traefik.http.routers.radarr.tls.certresolver=myresolver"
      - "traefik.http.routers.radarr.rule=Host(`movies.${TBOX_DOMAIN}`)"
      - "traefik.http.routers.radarr.service=radarr"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
    environment:
      # User from docker host to impersonate in container (configured in .env file)
      - PUID=${USER_PUID}
      - PGID=${USER_PGID}
      - TZ=${TIMEZONE}
      - UMASK=002
      # themes
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:radarr
      - TP_THEME=${TP_THEME}
    volumes:
      # Sync time with docker host
      - /etc/localtime:/etc/localtime:ro
      # Configuration dir
      - ${TBOX_CONFIG}/tools/radarr:/config
      # Storage dirs
      - ${TBOX_STORAGE}/data:/data
    ports:
      # Radarr Web UI port
      - 7878:7878
    restart: unless-stopped

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    labels:
      # Enable automatic update with Watchtower
      - "com.centurylinklabs.watchtower.enable=true"
      # Traefik
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.tls=true"
      - "traefik.http.routers.sonarr.tls.certresolver=myresolver"
      - "traefik.http.routers.sonarr.rule=Host(`tv.${TBOX_DOMAIN}`) && PathPrefix(`/`)"
      - "traefik.http.routers.sonarr.service=sonarr"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
    environment:
      # User from docker host to impersonate in container (configured in .env file)
      - PUID=${USER_PUID}
      - PGID=${USER_PGID}
      - TZ=${TIMEZONE}
      - UMASK=002
      # themes
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:sonarr
      - TP_THEME=${TP_THEME}
    volumes:
      # Sync time with docker host
      - /etc/localtime:/etc/localtime:ro
      # Configuration dir
      - ${TBOX_CONFIG}/tools/sonarr:/config
      # Storage dir
      - ${TBOX_STORAGE}/data:/data
    ports:
      - 8989:8989
    restart: unless-stopped

  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    labels:
      # Enable automatic update with Watchtower
      - "com.centurylinklabs.watchtower.enable=true"
      # Traefik
      - "traefik.enable=true"
      - "traefik.http.routers.readarr.tls=true"
      - "traefik.http.routers.readarr.tls.certresolver=myresolver"
      - "traefik.http.routers.readarr.rule=Host(`readarr.${TBOX_DOMAIN}`)"
      - "traefik.http.routers.readarr.service=readarr"
      - "traefik.http.services.readarr.loadbalancer.server.port=8787"
    environment:
      # User from docker host to impersonate in container (configured in .env file)
      - PUID=${USER_PUID}
      - PGID=${USER_PGID}
      - TZ=${TIMEZONE}
      - UMASK=002
      # themes
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:readarr
      - TP_THEME=${TP_THEME}
    volumes:
      # Sync time with docker host
      - /etc/localtime:/etc/localtime:ro
      # Configuration dir
      - ${TBOX_CONFIG}/tools/readarr:/config
      # Storage dir
      - ${TBOX_STORAGE}/data:/data
    ports:
      - 8787:8787
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    labels:
      # Enable automatic update with Watchtower
      - "com.centurylinklabs.watchtower.enable=true"
      # Traefik
      - "traefik.enable=true"
      - "traefik.http.routers.prowlarr.tls=true"
      - "traefik.http.routers.prowlarr.tls.certresolver=myresolver"
      - "traefik.http.routers.prowlarr.rule=Host(`indexer.${TBOX_DOMAIN}`)"
      - "traefik.http.routers.prowlarr.service=prowlarr"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"
    environment:
      # User from docker host to impersonate in container (configured in .env file)
      - PUID=${USER_PUID}
      - PGID=${USER_PGID}
      - TZ=${TIMEZONE}
      - UMASK=002
      # themes
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:prowlarr
      - TP_THEME=${TP_THEME}
    volumes:
      - ${TBOX_CONFIG}/tools/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    labels:
      # Enable automatic update with Watchtower
      - "com.centurylinklabs.watchtower.enable=true"
      # Traefik
      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin.tls=true"
      - "traefik.http.routers.jellyfin.tls.certresolver=myresolver"
      - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.${TBOX_DOMAIN}`)"
      - "traefik.http.routers.jellyfin.service=jellyfin"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
    environment:
      # User from docker host to impersonate in container (configured in .env file)
      - PUID=${USER_PUID}
      - PGID=${USER_PGID}
      - TZ=${TIMEZONE}
      - UMASK=002
      - JELLYFIN_PublishedServerUrl=${JELLYFIN_PUBLISHEDSERVERURL}
    volumes:
      - ${TBOX_CONFIG}/tools/jellyfin:/config
      - ${TBOX_STORAGE}/data/media:/data/media
    ports:
      - 8096:8096
    #   - 8920:8920 #optional
    #   - 7359:7359/udp #optional
    #   - 1900:1900/udp #optional
    restart: unless-stopped

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    labels:
      # Enable automatic update with Watchtower
      - "com.centurylinklabs.watchtower.enable=true"
      # Traefik
      - "traefik.enable=true"
      - "traefik.http.routers.jellyseerr.tls=true"
      - "traefik.http.routers.jellyseerr.tls.certresolver=myresolver"
      - "traefik.http.routers.jellyseerr.rule=Host(`jellyseerr.${TBOX_DOMAIN}`)"
      - "traefik.http.routers.jellyseerr.service=jellyseerr"
      - "traefik.http.services.jellyseerr.loadbalancer.server.port=5055"
    environment:
      # User from docker host to impersonate in container (configured in .env file)
      - PUID=${USER_PUID}
      - PGID=${USER_PGID}
      - TZ=${TIMEZONE}
      - UMASK=002
    volumes:
      - ${TBOX_CONFIG}/tools/jellyseerr:/app/config
    ports:
      - 5055:5055
    restart: unless-stopped